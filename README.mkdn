go-camo
=======

## About

Experimental Go version of [Camo][1] server.

## Differences from Camo

*   Support for 'Path Format' only (does not support 'Query String Format').
*   400 on image too large (instead of 404)
*   404 on upstream redirect (does not follow redirects). I am considering
    making this a tunable in the future.


## Building

    $ git clone https://github.com/cactus/go-camo.git
    $ cd go-camo
    $ export GOPATH=$(pwd)
    $ go install go-camo/go-camod

## Running

    $ $GOPATH/bin/go-camod -configFile=config.json

## Configuring

    $ $GOPATH/bin/go-camod -h
    Usage of go-camod:
      -bindAddress="0.0.0.0:8080": Address:Port to bind to
      -configFile="": JSON Config File
      -hmacKey="": HMAC Key
    
    $ cat config.json
    {
        "HmacKey": "Some long string here...",
        "Allowlist": [],
        "Denylist": [
            "^10\\.",
            "^169\\.254",
            "^192\\.168",
            "^172\\.(?:(?:1[6-9])|(?:2[0-9])|(?:3[0-1]))",
            "^(?:.*\\.)?example\\.(?:com|org|net)$"
        ]
    }

*   `HmacKey` is a secret key seed to the HMAC used for signing and
    validation.
*   `Allowlist` is a list of host matches to always allow.
*   `Denylist` is a list of host matches to reject.

If a Allowlist is defined, and a request does not match the host regex,
then the request is denied. Default is all requests pass the Allowlist if
none is specified.

Denylist entries are matched after Allowlist, so they take precedence.
Even if a request would be allowed by a Allowlist, a Denylist match would
deny it.

Option flags, if provided, override those in the config file (mostly just the
hmac key).

## License

Released under the [MIT license](http://www.opensource.org/licenses/mit-license.php). See `LICENSE` file for details.

[1]: https://github.com/atmos/camo
