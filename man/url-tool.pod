=encoding utf8

=head1 NAME

url-tool - provides a simple way to generate signed URLs from the command line


=head1 SYNOPSIS

B<url-tool> [I<OPTIONS>] [I<OPTION-ARGUMENTS>]


=head1 DESCRIPTION

B<url-tool> provides a simple way to generate signed URLs from the command line
compatible with L<go-camo(1)>.


=head1 OPTIONS

=over

=item B<-k, --key> <hmac-key>

The HMAC key to use.

=item B<--prefix> <prefix>

Optional url prefix used by encode output.

=item B<-h, --help>

Show help output and exit

=back

=head1 COMMANDS

url-tool has two subcommands.

=over

=item B<encode>

=over

=item B<-b, --base> <base>

The base encoding to use. Can be one of I<hex> or I<base64>.

=back

=item B<decode>

=back

=head1 EXAMPLES

Encode a url as hex:

 $ ./url-tool -k "test" -p "https://img.example.org" encode "http://golang.org/doc/gopher/frontpage.png"
 https://img.example.org/0f6def1cb147b0e84f39cbddc5ea10c80253a6f3/687474703a2f2f676f6c616e672e6f72672f646f632f676f706865722f66726f6e74706167652e706e67

Encode a url as base64:

 $ ./url-tool -k "test" -p "https://img.example.org" encode -b base64 "http://golang.org/doc/gopher/frontpage.png"
 https://img.example.org/D23vHLFHsOhPOcvdxeoQyAJTpvM/aHR0cDovL2dvbGFuZy5vcmcvZG9jL2dvcGhlci9mcm9udHBhZ2UucG5n

Decode a hex url:

 $ ./url-tool -k "test" decode "https://img.example.org/0f6def1cb147b0e84f39cbddc5ea10c80253a6f3/687474703a2f2f676f6c616e672e6f72672f646f632f676f706865722f66726f6e74706167652e706e67"
 http://golang.org/doc/gopher/frontpage.png

Decode a base64 url:

 $ ./url-tool -k "test" decode "https://img.example.org/D23vHLFHsOhPOcvdxeoQyAJTpvM/aHR0cDovL2dvbGFuZy5vcmcvZG9jL2dvcGhlci9mcm9udHBhZ2UucG5n"
 http://golang.org/doc/gopher/frontpage.png

=head1 WWW

https://github.com/cactus/go-camo

=cut
